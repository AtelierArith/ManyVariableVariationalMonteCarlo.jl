module ManyVariableVariationalMonteCarlo

# Core modules
include("types.jl")
include("config.jl")
include("parameters.jl")
include("io.jl")
include("defs.jl")

# New infrastructure modules
include("memory.jl")
include("rng.jl")
include("linalg_simple.jl")
include("linalg.jl")
include("greens.jl")
include("projections.jl")

# Wavefunction components
include("slater.jl")
include("rbm.jl")
include("jastrow.jl")

# Monte Carlo sampling
include("updates.jl")
include("sampler.jl")
include("observables.jl")

# Optimization
include("optimization.jl")

# Advanced features (commented out due to missing dependencies)
# include("parallel.jl")      # Requires Distributed
# include("io_advanced.jl")   # Requires HDF5
# include("visualization.jl") # Requires Plots
# include("benchmarking.jl")  # Requires BenchmarkTools

# Import functions from included modules
import .get_workspace, .reset_all_workspaces!

export SimulationConfig,
    FaceDefinition,
    facevalue,
    load_face_definition,
    push_definition!,
    ParameterLayout,
    ParameterFlags,
    ParameterMask,
    ParameterSet,
    initialize_parameters!,
    apply_opttrans_basis!,
    GreenFunctionEntry,
    GreenFunctionTable,
    read_initial_green,
    AMP_MAX,
    Namelist,
    load_namelist,
    TransferEntry,
    TransferTable,
    read_transfer_table,
    CoulombIntraEntry,
    CoulombIntraTable,
    read_coulomb_intra,
    InterAllEntry,
    InterAllTable,
    read_interall_table,
    GreenOneEntry,
    GreenOneTable,
    read_greenone_indices,
    # Enhanced configuration exports
    VMCDefinitionFiles,
    VMCParameters,
    read_namelist_file,
    read_modpara_file,
    read_transfer_file,
    read_coulomb_intra_file,
    read_locspn_file,
    read_gutzwiller_file,
    load_vmc_configuration,
    # Memory management exports
    MemoryLayout,
    allocate_global_arrays,
    memory_summary,
    Workspace,
    WorkspaceManager,
    get_workspace,
    reset_all_workspaces!,
    # RNG exports
    VMCRng,
    ParallelRngManager,
    RngState,
    initialize_rng!,
    get_thread_rng,
    vmcrand,
    vmcrandn,
    vmcrand_int,
    vmcrand_bool,
    save_rng_state,
    restore_rng_state!,
    rng_info,
    benchmark_rng,
    test_rng_quality,
    # Linear algebra exports
    I,  # Identity matrix
    pfaffian,
    pfaffian_and_inverse,
    pfaffian_det_relation,
    pfaffian_skew_symmetric,
    is_antisymmetric,
    MatrixCalculation,
    update_matrix!,
    sherman_morrison_update!,
    woodbury_update!,
    matrix_ratio,
    get_matrix_calculation,
    clear_matrix_calculations!,
    benchmark_linalg,
    PfaffianLimitError,
    # Enhanced linear algebra exports
    optimized_gemm!,
    optimized_gemv!,
    optimized_ger!,
    optimized_axpy!,
    optimized_scal!,
    optimized_dot,
    optimized_nrm2,
    optimized_getrf!,
    optimized_getri!,
    optimized_posv!,
    ThreadSafeMatrixOperations,
    get_thread_safe_ops,
    thread_safe_gemm!,
    # Green function exports
    GreenFunctionCache,
    LocalGreenFunction,
    green_function_1body!,
    green_function_2body!,
    large_scale_green_function!,
    clear_green_function_cache!,
    get_cache_statistics,
    benchmark_green_functions,
    # Quantum projection exports
    ProjectionType,
    SPIN_PROJECTION,
    MOMENTUM_PROJECTION,
    PARTICLE_NUMBER_PROJECTION,
    PARITY_PROJECTION,
    ProjectionOperator,
    QuantumProjection,
    add_spin_projection!,
    add_momentum_projection!,
    add_particle_number_projection!,
    add_parity_projection!,
    calculate_projection_ratio,
    gauss_legendre_quadrature,
    setup_continuous_projection!,
    calculate_continuous_projection_ratio,
    benchmark_projections,
    # Enhanced quantum projection exports
    SymmetryOperation,
    PointGroupProjection,
    add_symmetry_operation!,
    calculate_point_group_ratio,
    TimeReversalProjection,
    calculate_time_reversal_ratio,
    ParticleHoleProjection,
    calculate_particle_hole_ratio,
    AdvancedQuantumProjection,
    calculate_advanced_projection_ratio,
    setup_cubic_symmetry!,
    benchmark_advanced_projections,
    # Slater determinant exports
    SlaterMatrix,
    SlaterDeterminant,
    initialize_slater!,
    compute_determinant!,
    compute_inverse!,
    update_slater!,
    two_electron_update!,
    get_determinant_value,
    get_log_determinant_value,
    is_valid,
    reset_slater!,
    # Enhanced Slater determinant exports
    FrozenSpinSlaterDeterminant,
    initialize_frozen_spin_slater!,
    update_frozen_spin_slater!,
    BackflowCorrection,
    apply_backflow_correction!,
    backflow_corrected_orbital,
    BackflowSlaterDeterminant,
    initialize_backflow_slater!,
    update_backflow_slater!,
    get_backflow_determinant_value,
    get_backflow_log_determinant_value,
    is_backflow_valid,
    reset_backflow_slater!,
    # RBM exports
    RBMNetwork,
    initialize_rbm!,
    rbm_weight,
    log_rbm_weight,
    rbm_weight_phys,
    log_rbm_weight_phys,
    rbm_gradient,
    rbm_gradient_phys,
    update_rbm_weights!,
    update_rbm_weights_phys!,
    get_rbm_parameters,
    set_rbm_parameters!,
    rbm_parameter_count,
    reset_rbm!,
    # Enhanced RBM exports
    RBMGradient,
    compute_efficient_gradient!,
    update_rbm_efficient!,
    VariationalRBM,
    set_parameter_bounds!,
    set_parameter_scale!,
    get_parameter_value,
    set_parameter_value!,
    record_optimization_step!,
    apply_regularization!,
    get_optimization_statistics,
    reset_optimization_history!,
    RBMEnsemble,
    ensemble_rbm_weight,
    update_ensemble_weights!,
    # Jastrow factor exports
    JastrowType,
    JastrowParameter,
    JastrowFactor,
    add_gutzwiller_parameter!,
    add_density_density_parameter!,
    add_spin_spin_parameter!,
    add_three_body_parameter!,
    jastrow_factor,
    log_jastrow_factor,
    jastrow_ratio,
    jastrow_gradient,
    update_jastrow_parameters!,
    get_jastrow_parameters,
    set_jastrow_parameters!,
    jastrow_parameter_count,
    reset_jastrow!,
    benchmark_jastrow,
    # VMC sampling exports
    VMCConfig,
    VMCState,
    VMCResults,
    initialize_vmc_state!,
    propose_single_electron_move,
    propose_two_electron_move,
    propose_exchange_hopping,
    accept_move!,
    reject_move!,
    metropolis_step!,
    run_vmc_sampling!,
    measure_energy,
    measure_observables,
    get_acceptance_rate,
    reset_vmc_state!,
    # Enhanced VMC sampling exports
    EnhancedVMCState,
    initialize_enhanced_vmc_state!,
    compute_total_wavefunction_value,
    propose_enhanced_move,
    compute_move_ratio,
    accept_enhanced_move!,
    reject_enhanced_move!,
    enhanced_metropolis_step!,
    run_enhanced_vmc_sampling!,
    # Monte Carlo update exports
    UpdateType,
    SINGLE_ELECTRON,
    TWO_ELECTRON,
    EXCHANGE_HOPPING,
    PAIR_CREATION_ANNIHILATION,
    CLUSTER_UPDATE,
    UpdateResult,
    SingleElectronUpdate,
    TwoElectronUpdate,
    ExchangeHoppingUpdate,
    UpdateManager,
    propose_update,
    accept_update!,
    reject_update!,
    get_update_statistics,
    reset_update_statistics!,
    benchmark_updates,
    # Observable measurement exports
    ObservableType,
    ENERGY,
    KINETIC_ENERGY,
    POTENTIAL_ENERGY,
    SPIN_CORRELATION,
    DENSITY_CORRELATION,
    MOMENTUM_DISTRIBUTION,
    CUSTOM_OBSERVABLE,
    ObservableMeasurement,
    ObservableAccumulator,
    add_measurement!,
    update_statistics!,
    EnergyCalculator,
    calculate_kinetic_energy,
    calculate_potential_energy,
    calculate_total_energy,
    CorrelationFunction,
    calculate_spin_correlation,
    calculate_density_correlation,
    ObservableManager,
    measure_observables!,
    add_custom_observable!,
    measure_custom_observable!,
    get_observable_statistics,
    reset_observable_statistics!,
    benchmark_observables,
    # Optimization exports
    OptimizationMethod,
    STOCHASTIC_RECONFIGURATION,
    CONJUGATE_GRADIENT,
    ADAM,
    RMSPROP,
    MOMENTUM,
    OptimizationConfig,
    StochasticReconfiguration,
    compute_overlap_matrix!,
    compute_force_vector!,
    solve_sr_equations!,
    ConjugateGradient,
    cg_step!,
    AdamOptimizer,
    adam_step!,
    OptimizationManager,
    optimize_parameters!,
    get_optimization_statistics,
    reset_optimization!,
    benchmark_optimization
# Note: Advanced features exports commented out due to missing dependencies
# (parallel computing, advanced I/O, visualization, benchmarking)

end # module ManyVariableVariationalMonteCarlo
